0 info it worked if it ends with ok
1 verbose cli [ 'node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@2.5.1
3 info using node@v0.12.0
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec { raw: '.',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/Users/Altox/Desktop/telegram-bot',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /Users/Altox/.npm/node-telegram-bot/1.0.0/package.tgz not in flight; packing
9 verbose tar pack [ '/Users/Altox/.npm/node-telegram-bot/1.0.0/package.tgz',
9 verbose tar pack   '/Users/Altox/Desktop/telegram-bot' ]
10 verbose tarball /Users/Altox/.npm/node-telegram-bot/1.0.0/package.tgz
11 verbose folder /Users/Altox/Desktop/telegram-bot
12 info prepublish node-telegram-bot@1.0.0
13 verbose addLocalTarball adding from inside cache /Users/Altox/.npm/node-telegram-bot/1.0.0/package.tgz
14 silly cache afterAdd node-telegram-bot@1.0.0
15 verbose afterAdd /Users/Altox/.npm/node-telegram-bot/1.0.0/package/package.json not in flight; writing
16 verbose afterAdd /Users/Altox/.npm/node-telegram-bot/1.0.0/package/package.json written
17 silly publish { name: 'node-telegram-bot',
17 silly publish   version: '1.0.0',
17 silly publish   description: 'Modile for creating Telegram bots.',
17 silly publish   main: 'lib/telegram.js',
17 silly publish   scripts: { test: 'echo "Error: no test specified" && exit 1' },
17 silly publish   repository:
17 silly publish    { type: 'git',
17 silly publish      url: 'https://github.com/Naltox/node-telegram-bot.git' },
17 silly publish   keywords: [ 'telegram', 'bot', 'API' ],
17 silly publish   author: { name: 'Narek Abovyan', email: 'xeroxaltox@gmail.com' },
17 silly publish   license: 'ISC',
17 silly publish   bugs: { url: 'https://github.com/Naltox/telegram-bot/issues' },
17 silly publish   homepage: 'https://github.com/Naltox/node-telegram-bot',
17 silly publish   dependencies: { tiny_request: 'latest' },
17 silly publish   readme: '# telegram-bot\nSimple node module for creating Telegram bots.\n\n## Get started\n\nFirst of all you need to create your bot and get Token, you can do it right in telegram, just white to @BotFather.\n\nNow lets write simplr bot!\n\n```js \nvar bot = require(\'telegram-bot\')(\'YOUR_TOKEN\')\n\nbot.start({\n\t\'ping\': function(chatId, user, args){\n\t\tbot.sendMessage(chatId, \'pong\')\n\t}\n})\n\n```\nThats it!\n\n![Bot](ScreenShot.png)\n\n## Documentation\n\n- [Commands](#commands)\n- [Methods](#methods)   \n\n## Commands\nTo start your bot you need to pass bot.start function your command object:\n\n```js  \nbot.start({\n\t\'ping\': function(chatId, user, args){\n\t\tbot.sendMessage(chatId, \'pong\')\n\t},\n\t\'test\': function(chatId, user, args){\n\t\tconsole.log(\'test!\')\n\t},\n\t\'\': function(chatId, user, args, message){\n\t\t//will be called for any other command\n\t}\n})\n\n```\nAs you can see the key name is the command, so if bot get message that contains the key it will call your function and pass some data to it.\n\n- [chatId] id of chat the message is from\n- [user] user object of user that sendet the message\n- [args] command agrumets, for example if you have command \'test\' and someone will send you \'test 123\' message you can find \'123\' in args variable\n- [message] full message object if you need\n\n\n## Methods\n\n- [sendMessage](#sendmessage) \n- [sendPhoto](#sendphoto)\n- [sendPhotoFromUrl](#sendphotofromurl) \n- [sendDocument](#senddocument)\n- [sendDocumentFromUrl](#senddocumentfromurl)\n- [Call](#call)\n\n## sendMessage\n\nSends text message, splits it if it\'s very big\n\n```js   \nbot.sendMessage(chatId, \'test\', function(response, err){\n\t\n})  \n```\n## sendPhoto\n\nSends photo to chat\n\n```js   \nbot.sendPhoto(chatId, fs.createReadStream(\'photo.jpg\'), \'caption\', function(body, err){\n\t\n})  \n```\n## sendPhotoFromUrl\n\nDownloads photo from url to temp directory, sends it to chat and deletes it.\n\n```js   \nbot.sendPhotoFromUrl(chatId, \'http://example.com/test.jpg\', \'caption\', function(body, err){\n\t\n})  \n```\n\n##sendDocument\n\nSends documet to chat\n\n```js   \nvar document = {\n\tvalue: fs.createReadStream(\'photo.png\'),\n\tfilename: \'photo.png\',\n    contentType: \'image/png\'\n}\nbot.sendDocument(chatId, document, \'caption\', function(body, err){\n\t\n})  \n```\n\n## sendDocumentFromUrl\n\nDownloads documet from url to temp directory, sends it to chat and deletes it.\n\n```js   \nvar documet_data = {\n\tfilename: \'photo.png\',\n\tcontentType: \'image/png\'\n}\nbot.sendDocumentFromUrl(chatId, \'http://example.com/test.png\', document_data, \'caption\', function(body, err){\n\t\n})  \n```\n## Call\n\nYou can this function to call other methods: \n\n```js   \nvar params = {\n\tchat_id: 123,\n\tfrom_chat_id: 321,\n\tmessage_id: 777\n}\nbot.call(\'forwardMessage\', params, function(body, err){\n\t\n})  \n```',
17 silly publish   readmeFilename: 'README.md',
17 silly publish   gitHead: 'df1986f9de24e44f54c19ad996724aeae8d42ff6',
17 silly publish   _id: 'node-telegram-bot@1.0.0',
17 silly publish   _shasum: '1d60b91fd5470d9360b1826f417bb66e131292da',
17 silly publish   _from: '.' }
18 silly mapToRegistry name node-telegram-bot
19 silly mapToRegistry using default registry
20 silly mapToRegistry registry https://registry.npmjs.org/
21 silly mapToRegistry uri https://registry.npmjs.org/node-telegram-bot
22 verbose publish registryBase https://registry.npmjs.org/
23 silly publish uploading /Users/Altox/.npm/node-telegram-bot/1.0.0/package.tgz
24 verbose request uri https://registry.npmjs.org/node-telegram-bot
25 verbose request sending authorization for write operation
26 info attempt registry request try #1 at 1:58:43 AM
27 verbose request using bearer token for auth
28 verbose request id e5311820626cb40b
29 http request PUT https://registry.npmjs.org/node-telegram-bot
30 http 403 https://registry.npmjs.org/node-telegram-bot
31 verbose headers { 'content-type': 'application/json',
31 verbose headers   'cache-control': 'max-age=60',
31 verbose headers   'content-length': '109',
31 verbose headers   'accept-ranges': 'bytes',
31 verbose headers   date: 'Mon, 10 Aug 2015 22:58:45 GMT',
31 verbose headers   via: '1.1 varnish',
31 verbose headers   connection: 'keep-alive',
31 verbose headers   'x-served-by': 'cache-ams4135-AMS',
31 verbose headers   'x-cache': 'MISS',
31 verbose headers   'x-cache-hits': '0',
31 verbose headers   'x-timer': 'S1439247524.022879,VS0,VE1057' }
32 verbose request invalidating /Users/Altox/.npm/registry.npmjs.org/node-telegram-bot on PUT
33 error publish Failed PUT 403
34 verbose stack Error: You do not have permission to publish 'node-telegram-bot'. Are you logged in as the correct user? : node-telegram-bot
34 verbose stack     at CachingRegistryClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:254:14)
34 verbose stack     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:178:14)
34 verbose stack     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:344:22)
34 verbose stack     at Request.emit (events.js:110:17)
34 verbose stack     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1239:14)
34 verbose stack     at Request.emit (events.js:129:20)
34 verbose stack     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1187:12)
34 verbose stack     at IncomingMessage.emit (events.js:129:20)
34 verbose stack     at _stream_readable.js:908:16
34 verbose stack     at process._tickCallback (node.js:355:11)
35 verbose statusCode 403
36 verbose pkgid node-telegram-bot
37 verbose cwd /Users/Altox/Desktop/telegram-bot
38 error Darwin 14.4.0
39 error argv "node" "/usr/local/bin/npm" "publish"
40 error node v0.12.0
41 error npm  v2.5.1
42 error code E403
43 error You do not have permission to publish 'node-telegram-bot'. Are you logged in as the correct user? : node-telegram-bot
44 error If you need help, you may report this error at:
44 error     <http://github.com/npm/npm/issues>
45 verbose exit [ 1, true ]
